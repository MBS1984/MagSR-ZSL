2024-09-17 15:34:41,264 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.3.4.9
	PyTorch: 2.4.0
	TorchVision: 0.19.0
2024-09-17 15:34:41,264 INFO: 
  name: test_Real_SRResNetx4
  model_type: SRModel
  scale: 4
  num_gpu: 1
  manual_seed: 0
  network_g:[
    type: MSRResNet_detailss
    num_in_ch: 3
    num_out_ch: 3
    num_feat: 64
    num_block: 16
    upscale: 4
  ]
  path:[
    pretrain_network_g: C:\Users\mbava\Downloads\Simple-Align-main\code\Real-SRResNet_simple_align.pth
    strict_load_g: True
    results_root: C:\Users\mbava\Downloads\Simple-Align-main\results\test_Real_SRResNetx4
    log: C:\Users\mbava\Downloads\Simple-Align-main\results\test_Real_SRResNetx4
    visualization: C:\Users\mbava\Downloads\Simple-Align-main\results\test_Real_SRResNetx4\visualization
  ]
  val:[
    save_img: True
    suffix: None
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 4
        test_y_channel: False
      ]
    ]
  ]
  datasets:[
    test_01:[
      name: Set5_bicubic
      type: PairedImageDataset
      dataroot_gt: C:\Users\mbava\Downloads\Simple-Align-main\dataset\benchmark\Set5\x4
      dataroot_lq: C:\Users\mbava\Downloads\Simple-Align-main\dataset\benchmark\Set5\LR_degra\bicubic
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: False
  is_train: False

2024-09-17 15:34:41,265 INFO: Dataset [PairedImageDataset] - Set5_bicubic is built.
2024-09-17 15:34:41,265 INFO: Number of test images in Set5_bicubic: 13
2024-09-17 15:34:41,283 INFO: Network [MSRResNet_detailss] is created.
2024-09-17 15:34:41,404 INFO: Network: MSRResNet_detailss, with parameters: 1,517,571
2024-09-17 15:34:41,404 INFO: MSRResNet_detailss(
  (conv_first): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (body1): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body2): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body3): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body4): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body5): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body6): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body7): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body8): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body9): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body10): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body11): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body12): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body13): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body14): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body15): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (body16): Sequential(
    (0): ResidualBlockNoBN(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU(inplace=True)
    )
  )
  (upconv1): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (upconv2): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (pixel_shuffle): PixelShuffle(upscale_factor=2)
  (conv_hr): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
)
2024-09-17 15:34:41,412 INFO: Loading MSRResNet_detailss model from C:\Users\mbava\Downloads\Simple-Align-main\code\Real-SRResNet_simple_align.pth, with param key: [params].
2024-09-17 15:34:41,418 INFO: Model [SRModel] is created.
2024-09-17 15:34:41,418 INFO: Testing Set5_bicubic...
2024-09-17 15:34:43,115 INFO: Validation Set5_bicubic
	 # psnr: 22.3345	Best: 22.3345 @ test_Real_SRResNetx4 iter

